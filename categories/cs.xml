<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pollard's Rho (Posts about cs)</title><link>https://nicholas-miklaucic.github.io/</link><description></description><atom:link href="https://nicholas-miklaucic.github.io/categories/cs.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:nicholas.miklaucic@gmail.com"&gt;Nicholas Miklaucic&lt;/a&gt; </copyright><lastBuildDate>Wed, 12 Aug 2020 19:01:20 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>The Basics of Cryptography, Part 3: Cryptographic Hashes</title><link>https://nicholas-miklaucic.github.io/posts/the-basics-of-cryptography-part-3-cryptographic-hashes/</link><dc:creator>Nicholas Miklaucic</dc:creator><description>&lt;div&gt;&lt;p&gt;
&lt;i&gt;This is the third post in a series: for part 1, go &lt;a href="https://nicholas-miklaucic.github.io/posts/the-basics-of-cryptography-part-1-diffie-hellman-key-exchange/"&gt;here&lt;/a&gt;, and for part 2, go &lt;a href="https://nicholas-miklaucic.github.io/posts/the-basics-of-cryptography-part-2-intro-to-rsa/"&gt;here&lt;/a&gt;.&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;
We've previously discussed cryptography, in the modern world, as a way of sending secure messages
through insecure channels. But this is not the only thing you might want to do in a world with
malicious actors trying to thwart you. RSA and Diffie-Hellman exchange aren't vulnerable to simple
eavesdroppers. However, there are other types of attacks that they don't protect against, and we
might want to insulate ourselves against those attacks as well. One of them is a &lt;i&gt;man-in-the-middle&lt;/i&gt;
attack—in essence, someone manipulating messages. As we've often done, let's imagine a scenario, the one
I ended the last post with:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Alice and Bob are organizing anti-government activism in a country that represses political
freedoms. Alice wants to tell Bob to meet her in a certain place, but they can only communicate over
the Internet: Bob worries that Malcolm, the government employee that controls their Internet
provider, will forge a message from Alice and set him up. How can Bob verify that Alice's messages
haven't been modified?
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://nicholas-miklaucic.github.io/posts/the-basics-of-cryptography-part-3-cryptographic-hashes/"&gt;Read more…&lt;/a&gt; (14 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cs</category><category>math</category><guid>https://nicholas-miklaucic.github.io/posts/the-basics-of-cryptography-part-3-cryptographic-hashes/</guid><pubDate>Wed, 15 Apr 2020 19:00:00 GMT</pubDate></item><item><title>The Basics of Cryptography, Part 2: Intro To RSA</title><link>https://nicholas-miklaucic.github.io/posts/the-basics-of-cryptography-part-2-intro-to-rsa/</link><dc:creator>Nicholas Miklaucic</dc:creator><description>&lt;div&gt;&lt;p&gt;
This is part 2 of a series: to see the first post, go &lt;a href="https://nicholas-miklaucic.github.io/posts/the-basics-of-cryptography-part-1-diffie-hellman-key-exchange/"&gt;here.&lt;/a&gt; If you're not familiar with things like
modular arithmetic, read that before reading this.
&lt;/p&gt;

&lt;p&gt;
Today we're going to continue to look behind the curtain at the algorithms that power the Internet
we know and love. In this post, I'll cover the RSA cryptosystem: what it is, what it does, how it
works, etc. RSA is such a useful algorithm because it sidesteps a lot of the problems with sending
secure messages we talked about last time. You can think of it as a clever way of improving on the
encryption model we used last time, not by simply improving it as it exists, but by completely
sidestepping the security problems it had.
&lt;/p&gt;

&lt;p&gt;
This post will introduce a pristine version of RSA, without the real-world complications, and apply
it to the same problem we looked at last time: securely sending a message to someone else over an
insecure channel, without prior communication. In the future, I'll look at how this textbook RSA
fails in the real world, and additionally how you can use the idea behind RSA to do things besides
sending secure messages.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nicholas-miklaucic.github.io/posts/the-basics-of-cryptography-part-2-intro-to-rsa/"&gt;Read more…&lt;/a&gt; (14 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cs</category><category>math</category><guid>https://nicholas-miklaucic.github.io/posts/the-basics-of-cryptography-part-2-intro-to-rsa/</guid><pubDate>Tue, 21 Jan 2020 20:14:55 GMT</pubDate></item><item><title>Problem Solving Techniques: Induction</title><link>https://nicholas-miklaucic.github.io/posts/problem-solving-techniques-induction/</link><dc:creator>Nicholas Miklaucic</dc:creator><description>&lt;div&gt;&lt;p&gt;
&lt;i&gt;This is the second in my series on problem-solving techniques: for the first, see &lt;a href="https://nicholas-miklaucic.github.io/posts/problem-solving-techniques-invariants/"&gt;this post on invariants.&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;
As I've previously discussed, I'm fascinated by the ability to create proofs or solutions for
problems that are easy to understand but difficult to synthesize. In this series, I'm trying to shed
some limited insight on how we mere mortals can arrive at these beautiful and creative insights.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nicholas-miklaucic.github.io/posts/problem-solving-techniques-induction/"&gt;Read more…&lt;/a&gt; (13 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cs</category><category>math</category><guid>https://nicholas-miklaucic.github.io/posts/problem-solving-techniques-induction/</guid><pubDate>Thu, 16 Jan 2020 18:53:20 GMT</pubDate></item><item><title>The Basics of Cryptography, Part 1: Diffie-Hellman Key Exchange</title><link>https://nicholas-miklaucic.github.io/posts/the-basics-of-cryptography-part-1-diffie-hellman-key-exchange/</link><dc:creator>Nicholas Miklaucic</dc:creator><description>&lt;div&gt;&lt;p&gt;
How can we send secure messages through insecure channels?
&lt;/p&gt;

&lt;p&gt;
A quick note before we begin: this summarizes a talk I gave at my high school's computer science
club. It's written to be accessible to anyone with a basic math background, though, and it doesn't
require any programming knowledge. This is the start of a series that will try to explain the basics
of cryptography: given that all of us use cryptography every day, it's important to have a basic
understanding of how it works. It's also pretty cool!
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nicholas-miklaucic.github.io/posts/the-basics-of-cryptography-part-1-diffie-hellman-key-exchange/"&gt;Read more…&lt;/a&gt; (14 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cs</category><category>math</category><guid>https://nicholas-miklaucic.github.io/posts/the-basics-of-cryptography-part-1-diffie-hellman-key-exchange/</guid><pubDate>Tue, 14 Jan 2020 16:09:56 GMT</pubDate></item><item><title>Problem-Solving Techniques: Invariants</title><link>https://nicholas-miklaucic.github.io/posts/problem-solving-techniques-invariants/</link><dc:creator>Nicholas Miklaucic</dc:creator><description>&lt;div&gt;&lt;p&gt;
There are a lot of clever proofs in mathematics and computer science. I've already talked about some
of them, and I hope to do a lot more of it on this blog. There's often a certain separation that I
feel when I read something particularly creative or beautiful: this is amazing, but how could I ever
hope to produce something like it? Is real aesthetic achievement in these fields limited to those
with a natural talent I lack? 
&lt;/p&gt;

&lt;p&gt;
I'm still not sure about that last question, but I do know that, like anything, it is possible to
improve at creative problem-solving through practice. The people I've known who have been best at
doing creative math—the kind that makes perfect sense when you see it but seems impossible to find
if you don't already know it—have built up vast toolboxes of concepts and ideas that are useful in
many different ways across mathematics and computer science. These aren't solutions for a single
problem: they're meta-solutions that serve as an archetype for solutions to a diverse array of
problems. In my experience, the size of that toolbox is what, more than anything else, determines
how effectively one can find creative, novel ways of approaching problems. I'll be talking about one
such tool today: invariants.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nicholas-miklaucic.github.io/posts/problem-solving-techniques-invariants/"&gt;Read more…&lt;/a&gt; (14 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cs</category><category>math</category><guid>https://nicholas-miklaucic.github.io/posts/problem-solving-techniques-invariants/</guid><pubDate>Tue, 07 Jan 2020 17:26:06 GMT</pubDate></item><item><title>Hello, World!</title><link>https://nicholas-miklaucic.github.io/posts/hello-world/</link><dc:creator>Nicholas Miklaucic</dc:creator><description>&lt;div&gt;&lt;p&gt;
This is the first public page for this blog: a place where I will record thoughts and essays on
various topics, usually pretty close to the intersection of math, data, and computing. There will be
some pretty heavy mathematical topics as well as much lighter fare: my hope is that people of varied
math and computer science backgrounds can find something useful for them.
&lt;/p&gt;

&lt;p&gt;
So, hello world!&lt;sup&gt;&lt;a id="fnr.1" class="footref" href="https://nicholas-miklaucic.github.io/posts/hello-world/#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt; I thought the first thing I should probably do is explain why I go by the tag
&lt;code&gt;PollardsRho&lt;/code&gt; in various places and why I decided to give this blog the title "Pollard's Rho." Simply
put, it's my favorite algorithm: kind of an esoteric category to have a favorite in, but I'm sure by
the end of this you'll see what I mean.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nicholas-miklaucic.github.io/posts/hello-world/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>algorithms</category><category>cs</category><category>meta</category><guid>https://nicholas-miklaucic.github.io/posts/hello-world/</guid><pubDate>Fri, 02 Aug 2019 23:35:07 GMT</pubDate></item></channel></rss>